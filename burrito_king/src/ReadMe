Burrito King
Program Class Design
The Burrito King application follows the Model-View-Controller (MVC) design pattern to separate concerns and enhance maintainability. The program consists of the following packages and key classes:

Model Package:

FoodItem: Represents an item on the menu with attributes such as name and price.
Order: Represents an order placed by a user, containing a list of food items, order status, and other relevant details.
Restaurant: Manages the menu and provides the meal price.
User: Represents a user with attributes like username, password, first name, last name, email, VIP status, credits, and a list of orders.
View Package:

MainView: The primary JavaFX application class that handles user interaction and displays different screens such as login, registration, dashboard, and order placement.
Controller Package:

MainController: Handles the business logic, interacts with the model, and updates the view accordingly.
UserManager: Manages user-related operations such as login, registration, and updating user information.
Util Package:

DatabaseConnection: Provides utility methods for establishing a connection to the database.
Dao Package:

UserDAO: Implements data access operations for the User class.
OrderDAO: Implements data access operations for the Order class.
Design Pattern Implemented
MVC (Model-View-Controller):

The application uses the MVC design pattern to separate the user interface (View) from the business logic (Controller) and data (Model). This separation improves code maintainability and allows for independent development and testing of each component.
Singleton Pattern:

The UserManager class implements the Singleton pattern to ensure that there is only one instance of the user manager throughout the application. This is crucial for managing user-related operations consistently.
DAO (Data Access Object) Pattern:

The UserDAO and OrderDAO classes implement the DAO pattern to abstract and encapsulate all access to the data source. This pattern provides a consistent API for data access and helps manage database operations efficiently.